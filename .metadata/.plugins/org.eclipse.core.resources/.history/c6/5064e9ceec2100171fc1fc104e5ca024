package cn.wj.controller;

import java.io.File;
import java.io.IOException;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.databind.JsonMappingException;

import cn.wj.utils.BiSheResult;
import cn.wj.utils.IDUtils;
import cn.wj.utils.JsonUtils;

/*
 * 上传商品
 */


@Controller
public class AddItemController {

	@RequestMapping("/post-ad")
	public String additemPage(){
		return "post-ad";
	}
	
	@RequestMapping("/aa")
	public String aaa(String file){
		System.out.println(file);
		return "";
	}
	    //上传文件方法  
		@RequestMapping(value = "/uploadaa", produces = "text/plain;charset=UTF-8")  
		 @ResponseBody  
		 public String ajaxUpload(@RequestParam(value="basicInfoHead",required=false) MultipartFile file,HttpServletRequest request) throws IllegalStateException,  
		   IOException {  
			String path1 = request.getSession().getServletContext().getRealPath("upload");
			
			String realName= file.getOriginalFilename();
			
			String prefix=realName.substring(realName.lastIndexOf(".")+1,realName.length());
			String newFilename = IDUtils.genImageName()+"."+prefix;
			File targetfile = new File(path1,newFilename);
			if (!targetfile.exists()) {
				targetfile.mkdirs();
			}
			
			try {
				file.transferTo(targetfile);
				
			} catch (Exception e) {
				e.printStackTrace();
			}
			
		try{	
			String url1 = "${pageContext.request.contextPath}/upload/"+newFilename;
			System.out.println(url1);
			request.setAttribute("imagePath", "url1");
			
			BiSheResult result = new BiSheResult();
			result.setStatus(200);
			result.setData(url1);
			String json = JsonUtils.objectToJson(result);
			return json;
        } catch (JsonGenerationException e) {  
            e.printStackTrace();  
        } catch (JsonMappingException e) {  
            e.printStackTrace();  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
		}
	
}
